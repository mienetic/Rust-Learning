/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╕кр╕нр╕Щр╣Ар╕гр╕╖р╣Ир╕нр╕З Lifetimes р╣Гр╕Щ Structs - р╣Вр╕гр╕Зр╕Зр╕▓р╕Щр╕Ьр╕ер╕┤р╕Х Struct р╕нр╕бр╕Хр╕░! ЁЯПнтЪ░я╕П
/// р╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Йр╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕З Struct р╕Чр╕╡р╣Ир╣Ар╕Бр╣Зр╕Ъ references р╣Др╕зр╣Йр╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Юр╕┤р╕Юр╕┤р╕Шр╕ар╕▒р╕Ур╕Ср╣М! ЁЯПЫя╕П
///
/// # Panics
///
/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Щр╕╡р╣Йр╕нр╕▓р╕И panic р╣Ар╕бр╕╖р╣Ир╕нр╣Ар╕Вр╣Йр╕▓р╕Цр╕╢р╕З array index р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З
pub fn learn_struct_lifetimes() {
    println!("\nЁЯПЧя╕П === Lifetimes р╣Гр╕Щ Structs: р╣Вр╕гр╕Зр╕Зр╕▓р╕Щр╕Ьр╕ер╕┤р╕Х Struct р╕нр╕бр╕Хр╕░! === ЁЯПЧя╕П");

    // Struct р╕Чр╕╡р╣Ир╣Ар╕Бр╣Зр╕Ъ reference - р╕Хр╕╣р╣Йр╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н! ЁЯУЪЁЯФР
    #[derive(Debug)]
    struct ImportantExcerpt<'a> {
        part: &'a str,     // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н (р╕бр╕╡р╕нр╕▓р╕вр╕╕р╕Вр╕▒р╕в 'a р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Вр╕Ър╕гр╕▓р╕У!)
        // Fields р╣Ар╕лр╕ер╣Ир╕▓р╕Щр╕╡р╣Йр╣Гр╕Кр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Ар╕Юр╕┤р╣Ир╕бр╣Ар╕Хр╕┤р╕бр╣Гр╕Щ struct
        // Warning: fields р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╣Гр╕Кр╣Йр╣Ар╕Юр╕гр╕▓р╕░р╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕┤р╕Х
        #[allow(dead_code)]
        page: u32,         // р╕лр╕Щр╣Йр╕▓р╕Чр╕╡р╣И (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╣Ар╕ер╕Вр╕Чр╕╡р╣Ир╕Ър╣Йр╕▓р╕Щ!)
        #[allow(dead_code)]
        chapter: u32,      // р╕Ър╕Чр╕Чр╕╡р╣И (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╣Ар╕ер╕Вр╕Чр╕╡р╣Ир╕лр╣Йр╕нр╕З!)
    }

    impl<'a> ImportantExcerpt<'a> {
        // Method р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕гр╕░р╕Ър╕╕ lifetime (elision rules) - р╣Ар╕зр╕Чр╕бр╕Щр╕Хр╕гр╣Мр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤! тЬи
        const fn level(&self) -> i32 {
            3  // р╕гр╕░р╕Фр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Фр╕▓р╕зр╕бр╕┤р╕Кр╕ер╕┤р╕Щ!)
        }

        // Method р╕Чр╕╡р╣И return reference - р╣Вр╕Жр╕йр╕Бр╕Ыр╕гр╕░р╕Ир╕│р╕Хр╕╣р╣Йр╣Ар╕Бр╣Зр╕Ъ! ЁЯУв
        fn announce_and_return_part(&self, announcement: &str) -> &str {
            println!("ЁЯУг р╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н (р╕Ыр╕гр╕░р╕Бр╕▓р╕ир╕Ир╕▓р╕Бр╣Вр╕Жр╕йр╕Б): {announcement}");
            self.part  // р╕кр╣Ир╕Зр╕Др╕╖р╕Щр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╣Вр╕Жр╕йр╕Бр╕нр╣Ир╕▓р╕Щр╕Вр╣Ир╕▓р╕з!)
        }

        // Method р╕Чр╕╡р╣Ир╕бр╕╡ multiple lifetime parameters - р╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ъ! ЁЯХ╡я╕ПтАНтЩВя╕П
        fn compare_with<'b>(&self, other: &'b str) -> &'a str {
            println!("ЁЯФН р╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ъ '{}' р╕Бр╕▒р╕Ъ '{}' (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ър╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ!)", self.part, other);
            self.part  // р╣Ар╕ер╕╖р╕нр╕Бр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Вр╕нр╕Зр╕Хр╕▒р╕зр╣Ар╕нр╕З (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Др╕Щр╕Чр╕╡р╣Ир╕бр╕▒р╣Ир╕Щр╣Гр╕Ир╣Гр╕Щр╕Хр╕▒р╕зр╣Ар╕нр╕З!)
        }
    }

    let novel = String::from("р╣Ар╕гр╕╡р╕вр╕Бр╕Йр╕▒р╕Щр╕зр╣Ир╕▓р╕нр╕┤р╕Кр╕бр╕▓р╣Ар╕нр╕е. р╣Ар╕бр╕╖р╣Ир╕нр╕лр╕ер╕▓р╕вр╕Ыр╕╡р╕Бр╣Ир╕нр╕Щ р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╕кр╕Щр╣Гр╕Ир╕зр╣Ир╕▓р╣Ар╕бр╕╖р╣Ир╕нр╣Др╕лр╕гр╣Ир╣Бр╕Щр╣Ир╣Ж...");

    let first_sentence = novel.split('.').next().expect("р╣Др╕бр╣Ир╕Юр╕Ър╕Ыр╕гр╕░р╣Вр╕вр╕Д");

    let excerpt = ImportantExcerpt {
        part: first_sentence,
        page: 1,
        chapter: 1,
    };

    println!("\nЁЯУЪ === р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н: р╕Хр╕╣р╣Йр╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Вр╕Ър╕гр╕▓р╕У! === ЁЯУЪ");
    println!("ЁЯУЦ Excerpt: {excerpt:?}");
    println!("тнР р╕гр╕░р╕Фр╕▒р╕Ър╕Др╕зр╕▓р╕бр╕кр╕│р╕Др╕▒р╕Н: {}", excerpt.level());

    let announcement = "р╕Щр╕╡р╣Ир╕Др╕╖р╕нр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Чр╕╡р╣Ир╕кр╕│р╕Др╕▒р╕Нр╕бр╕▓р╕Б!";
    let returned_part = excerpt.announce_and_return_part(announcement);
    println!("ЁЯУЭ р╕кр╣Ир╕зр╕Щр╕Чр╕╡р╣Ир╕кр╣Ир╕Зр╕Др╕╖р╕Щ: {returned_part}");

    let other_text = "р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕нр╕╖р╣Ир╕Щ";
    let compared = excerpt.compare_with(other_text);
    println!("ЁЯФН р╕Ьр╕ер╕Бр╕▓р╕гр╣Ар╕Ыр╕гр╕╡р╕вр╕Ър╣Ар╕Чр╕╡р╕вр╕Ъ: {compared}");

    // Struct р╕Чр╕╡р╣Ир╕бр╕╡ multiple references - р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕гр╕╡р╕зр╕┤р╕зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЭтнР
    #[derive(Debug)]
    struct BookReview<'a, 'b> {
        title: &'a str,    // р╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н (р╕бр╕╡р╕нр╕▓р╕вр╕╕р╕Вр╕▒р╕в 'a)
        content: &'b str,  // р╣Ар╕Щр╕╖р╣Йр╕нр╕лр╕▓р╕гр╕╡р╕зр╕┤р╕з (р╕бр╕╡р╕нр╕▓р╕вр╕╕р╕Вр╕▒р╕в 'b)
        rating: u8,        // р╕Др╕░р╣Бр╕Щр╕Щ (0-5 р╕Фр╕▓р╕з р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕гр╕╡р╕зр╕┤р╕зр╕гр╣Йр╕▓р╕Щр╕нр╕▓р╕лр╕▓р╕г!)
    }

    impl<'a, 'b> BookReview<'a, 'b> {
        const fn new(title: &'a str, content: &'b str, rating: u8) -> Self {
            BookReview {
                title,
                content,
                rating,
            }
        }

        fn summary(&self) -> String {
            format!("ЁЯУЪ '{}' - р╕Др╕░р╣Бр╕Щр╕Щ: {}/5 тнР", self.title, self.rating)
        }

        fn full_review(&self) -> String {
            format!(
                "ЁЯУЪ р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: {}\nЁЯУЭ р╕гр╕╡р╕зр╕┤р╕з: {}\nтнР р╕Др╕░р╣Бр╕Щр╕Щ: {}/5",
                self.title, self.content, self.rating
            )
        }
    }

    println!("\nЁЯУЪ === р╕гр╕╡р╕зр╕┤р╕зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕кр╕│р╕Щр╕▒р╕Бр╕Зр╕▓р╕Щр╕гр╕╡р╕зр╕┤р╕зр╕бр╕╖р╕нр╕нр╕▓р╕Кр╕╡р╕Ю! === ЁЯУЪ");

    let book_title = "The Rust Programming Language";
    let review_content = "р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕вр╕нр╕Фр╣Ар╕вр╕╡р╣Ир╕вр╕бр╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й Rust р╕Хр╕▒р╣Йр╕Зр╣Бр╕Хр╣Ир╕Юр╕╖р╣Йр╕Щр╕Рр╕▓р╕Щр╕Ир╕Щр╕Цр╕╢р╕Зр╕Вр╕▒р╣Йр╕Щр╕кр╕╣р╕З";

    let review = BookReview::new(book_title, review_content, 5);

    println!("ЁЯУЛ р╕кр╕гр╕╕р╕Ы: {}", review.summary());
    println!("\nЁЯУД р╕гр╕╡р╕зр╕┤р╕зр╣Ар╕Хр╣Зр╕б:\n{}", review.full_review());

    // Nested structs with lifetimes - р╕гр╕░р╕Ър╕Ър╕Ир╕▒р╕Фр╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Щр╕▒р╕Бр╣Ар╕Вр╕╡р╕вр╕Щ! ЁЯСитАНЁЯТ╝ЁЯУЪ
    #[derive(Debug)]
    struct Author<'a> {
        // Fields р╣Гр╕Кр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й lifetime р╣Гр╕Щ nested structs
        // Warning: fields р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╣Гр╕Кр╣Йр╣Ар╕Юр╕гр╕▓р╕░р╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕┤р╕Х
        #[allow(dead_code)]
        name: &'a str,  // р╕Кр╕╖р╣Ир╕нр╕Щр╕▒р╕Бр╣Ар╕Вр╕╡р╕вр╕Щ (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Ыр╣Йр╕▓р╕вр╕Кр╕╖р╣Ир╕н!)
        #[allow(dead_code)]
        bio: &'a str,   // р╕Ыр╕гр╕░р╕зр╕▒р╕Хр╕┤р╕Щр╕▒р╕Бр╣Ар╕Вр╕╡р╕вр╕Щ (р╣Ар╕лр╕бр╕╖р╕нр╕Щ CV!)
    }

    #[derive(Debug)]
    struct Book<'a, 'b> {
        // Fields р╣Гр╕Кр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й multiple lifetimes
        // Warning: fields р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╣Гр╕Кр╣Йр╣Ар╕Юр╕гр╕▓р╕░р╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕Шр╕┤р╕Х
        #[allow(dead_code)]
        title: &'a str,      // р╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н (р╕бр╕╡р╕нр╕▓р╕вр╕╕р╕Вр╕▒р╕в 'a)
        #[allow(dead_code)]
        author: Author<'b>,  // р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Щр╕▒р╕Бр╣Ар╕Вр╕╡р╕вр╕Щ (р╕бр╕╡р╕нр╕▓р╕вр╕╕р╕Вр╕▒р╕в 'b)
        #[allow(dead_code)]
        isbn: &'a str,       // р╕гр╕лр╕▒р╕к ISBN (р╕бр╕╡р╕нр╕▓р╕вр╕╕р╕Вр╕▒р╕в 'a р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н!)
    }

    println!("\nЁЯУЦ === р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Фр╕Фр╕┤р╕Ир╕┤р╕Чр╕▒р╕е! === ЁЯУЦ");

    let author_name = "Steve Klabnik р╣Бр╕ер╕░ Carol Nichols";
    let author_bio = "р╕Ьр╕╣р╣Йр╣Ар╕Вр╕╡р╕вр╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н Rust р╕Чр╕╡р╣Ир╕бр╕╡р╕Кр╕╖р╣Ир╕нр╣Ар╕кр╕╡р╕вр╕З";

    let author = Author {
        name: author_name,
        bio: author_bio,
    };

    let book_title2 = "The Rust Programming Language";
    let book_isbn = "978-1593278281";

    let book = Book {
        title: book_title2,
        author,
        isbn: book_isbn,
    };

    println!("ЁЯУЪ р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: {book:?}");
}
