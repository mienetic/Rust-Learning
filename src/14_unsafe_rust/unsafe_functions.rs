//! Unsafe Functions р╣Гр╕Щ Unsafe Rust - р╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯХ╡я╕ПтАНтЩВя╕ПЁЯТА
//!
//! р╣Др╕Яр╕ер╣Мр╕Щр╕╡р╣Йр╕Ыр╕гр╕░р╕Бр╕нр╕Ър╕Фр╣Йр╕зр╕в:
//! - р╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕Зр╣Бр╕ер╕░р╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й unsafe functions - р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕ер╕▒р╕Ър╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯОптЪб
//! - р╕Бр╕▓р╕гр╣Гр╕Кр╣Й unsafe functions р╕Ир╕▓р╕Б standard library - р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕бр╕╖р╕нр╕ер╕▒р╕Ър╕Ир╕▓р╕Бр╕Др╕ер╕▒р╕З! ЁЯЫая╕ПЁЯТА
//! - р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕Чр╕╡р╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З - р╕Бр╕▓р╕гр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕нр╕вр╣Ир╕▓р╕Зр╕гр╕░р╕бр╕▒р╕Фр╕гр╕░р╕зр╕▒р╕З! ЁЯЫбя╕ПЁЯФН

use std::slice;

// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ unsafe р╕Чр╕╡р╣Ир╣Ар╕гр╕▓р╕кр╕гр╣Йр╕▓р╕Зр╣Ар╕нр╕З - р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕ер╕▒р╕Ър╕кр╕╕р╕Фр╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯТАтЪб
unsafe fn dangerous_function() {
    println!("ЁЯТАтЪб р╕Щр╕╡р╣Ир╕Др╕╖р╕нр╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕ер╕▒р╕Ър╕кр╕╕р╕Фр╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯХ╡я╕ПтАНтЩВя╕ПЁЯТе");  // ЁЯЪи р╕Бр╕▓р╕гр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕ер╕▒р╕Ъ
}

/// р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й unsafe functions - р╕Бр╕▓р╕гр╕Эр╕╢р╕Бр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯОпЁЯТА
pub fn unsafe_functions_examples() {
    println!("\nЁЯХ╡я╕ПтАНтЩВя╕ПЁЯТА === Dangerous Detective Operations Training === тЪбЁЯОп");

    // р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й unsafe function р╕Хр╣Йр╕нр╕Зр╕нр╕вр╕╣р╣Ир╣Гр╕Щ unsafe block - р╣Ар╕Вр╕Хр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! тЪая╕ПЁЯТА
    unsafe {
        dangerous_function();  // ЁЯОп р╣Ар╕гр╕┤р╣Ир╕бр╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕ер╕▒р╕Ъ
    }

    // р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й slice::from_raw_parts - р╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕Зр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Ыр╕ер╕нр╕б! ЁЯУЛтЪб
    let mut v = vec![1, 2, 3, 4, 5];        // ЁЯУж р╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Хр╣Йр╕Щр╕Йр╕Ър╕▒р╕Ъ
    let ptr = v.as_mut_ptr();                // тЪб р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕бр╕╖р╕нр╣Бр╕Бр╣Йр╣Др╕В
    let len = v.len();                       // ЁЯУП р╕Вр╕Щр╕▓р╕Фр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ

    unsafe {
        // р╕кр╕гр╣Йр╕▓р╕З slice р╕Ир╕▓р╕Б raw pointer - р╕Бр╕▓р╕гр╕Ыр╕ер╕нр╕бр╣Бр╕Ыр╕ер╕Зр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ! ЁЯУЛЁЯТА
        let slice = slice::from_raw_parts_mut(ptr, len);  // ЁЯФз р╕кр╕гр╣Йр╕▓р╕Зр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Ыр╕ер╕нр╕б
        slice[0] = 100;                      // тЬПя╕П р╣Бр╕Бр╣Йр╣Др╕Вр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ
        println!("ЁЯУЛ р╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Ыр╕ер╕нр╕бр╕Чр╕╡р╣Ир╕кр╕гр╣Йр╕▓р╕Зр╕Вр╕╢р╣Йр╕Щ: {slice:?}");  // ЁЯУК р╕Ьр╕ер╕Бр╕▓р╕гр╕Ыр╕ер╕нр╕бр╣Бр╕Ыр╕ер╕З
    }

    println!("ЁЯУЛ р╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕Хр╣Йр╕Щр╕Йр╕Ър╕▒р╕Ър╕лр╕ер╕▒р╕Зр╕Цр╕╣р╕Бр╣Бр╕Бр╣Йр╣Др╕В: {v:?}");  // ЁЯУЛ р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣Мр╕кр╕╕р╕Фр╕Чр╣Йр╕▓р╕в
}

/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ unsafe р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З - р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╣Ар╕Юр╕┤р╣Ир╕бр╕Юр╕ер╕▒р╕Зр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ! тЪбЁЯФв
#[allow(clippy::missing_safety_doc)]
pub unsafe fn multiply_by_two(ptr: *mut i32) {
    if !ptr.is_null() {                     // ЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕бр╕╖р╕н
        unsafe {
            *ptr *= 2;                       // тЪб р╣Ар╕Юр╕┤р╣Ир╕бр╕Юр╕ер╕▒р╕Зр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╣Ар╕Ыр╣Зр╕Щ 2 р╣Ар╕Чр╣Ир╕▓
        }
    }
}

/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Чр╕╡р╣И wrap unsafe operation - р╕Бр╕▓р╕гр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕нр╕вр╣Ир╕▓р╕Зр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в! ЁЯЫбя╕ПтЪб
pub fn safe_multiply_by_two(value: &mut i32) {
    unsafe {
        multiply_by_two(std::ptr::from_mut::<i32>(value));  // ЁЯЫбя╕П р╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕гр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в
    }
}

#[cfg(test)]
mod tests {
    use super::*;
    use std::slice;

    #[test]
    fn test_slice_from_raw_parts() {
        let v = [1, 2, 3, 4, 5];
        let ptr = v.as_ptr();
        let len = v.len();

        unsafe {
            let slice = slice::from_raw_parts(ptr, len);
            assert_eq!(slice, &[1, 2, 3, 4, 5]);
        }
    }

    #[test]
    fn test_safe_multiply_by_two() {
        let mut value = 21;
        safe_multiply_by_two(&mut value);
        assert_eq!(value, 42);
    }
}