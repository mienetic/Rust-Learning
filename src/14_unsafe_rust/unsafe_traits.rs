//! Unsafe Traits р╣Гр╕Щ Unsafe Rust - р╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕Бр╕▓р╕г Trait р╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯХ╡я╕ПтАНтЩВя╕ПтЪб
//!
//! р╣Др╕Яр╕ер╣Мр╕Щр╕╡р╣Йр╕Ыр╕гр╕░р╕Бр╕нр╕Ър╕Фр╣Йр╕зр╕в:
//! - р╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕З unsafe traits - р╕Бр╕▓р╕гр╕нр╕нр╕Бр╣Бр╕Ър╕Ър╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! ЁЯОптЪая╕П
//! - р╕Бр╕▓р╕г implement unsafe traits - р╕Бр╕▓р╕гр╕Эр╕╢р╕Бр╕кр╕▓р╕вр╕ер╕▒р╕Ър╣Ар╕Йр╕Юр╕▓р╕░р╕Чр╕▓р╕З! ЁЯжАЁЯТА
//! - р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ Send р╣Бр╕ер╕░ Sync - р╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Вр╣Йр╕▓р╕бр╕бр╕┤р╕Хр╕┤! ЁЯЪАЁЯМА

/// р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З unsafe trait - р╕кр╕▒р╕Нр╕Нр╕▓р╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕вр╕Вр╕нр╕Зр╕кр╕▓р╕вр╕ер╕▒р╕Ъ! ЁЯОптЪая╕П
#[allow(clippy::missing_safety_doc)]
pub unsafe trait UnsafeTrait {
    fn unsafe_method(&self);  // ЁЯТА р╣Ар╕бр╕Шр╕нр╕Фр╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕вр╕Чр╕╡р╣Ир╕Хр╣Йр╕нр╕Зр╕гр╕░р╕зр╕▒р╕З
}

// р╕Бр╕▓р╕г implement unsafe trait р╕Хр╣Йр╕нр╕Зр╣Гр╕Кр╣Й unsafe - р╕Бр╕▓р╕гр╕Эр╕╢р╕Бр╕кр╕▓р╕вр╕ер╕▒р╕Ър╣Ар╕Йр╕Юр╕▓р╕░р╕Чр╕▓р╕З! ЁЯжАЁЯТА
unsafe impl UnsafeTrait for i32 {
    fn unsafe_method(&self) {
        println!("ЁЯФвЁЯТА р╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в: {self}");  // тЪб р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕Хр╕▒р╕зр╣Ар╕ер╕В
    }
}

unsafe impl UnsafeTrait for String {
    fn unsafe_method(&self) {
        println!("ЁЯУЭЁЯТА р╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Ыр╕Пр╕┤р╕Ър╕▒р╕Хр╕┤р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в: {self}");  // тЪб р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б
    }
}

pub fn unsafe_traits_examples() {
    println!("\nЁЯОпЁЯТА === Dangerous Trait Operations === тЪбЁЯХ╡я╕ПтАНтЩВя╕П");

    let number = 42i32;                              // ЁЯФв р╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Хр╕▒р╕зр╣Ар╕ер╕В
    let text = String::from("Hello, Unsafe!");      // ЁЯУЭ р╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б

    // р╕Бр╕▓р╕гр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й method р╕Ир╕▓р╕Б unsafe trait - р╕Бр╕▓р╕гр╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕вр╕ер╕▒р╕Ъ! ЁЯУЮЁЯТА
    number.unsafe_method();   // тЪб р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Хр╕▒р╕зр╣Ар╕ер╕В
    text.unsafe_method();     // тЪб р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Вр╣Йр╕нр╕Др╕зр╕▓р╕б

    println!("ЁЯТбтЪая╕П Unsafe traits р╣Гр╕Кр╣Йр╣Ар╕бр╕╖р╣Ир╕нр╕Хр╣Йр╕нр╕Зр╕Бр╕▓р╕гр╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕Чр╕╡р╣И compiler р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╣Др╕бр╣Ир╣Др╕Фр╣Й!");
}

/// р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕кр╕гр╣Йр╕▓р╕З custom smart pointer - р╕Бр╕ер╣Ир╕нр╕Зр╣Ар╕Бр╣Зр╕Ър╕Вр╕нр╕Зр╕ер╕▒р╕Ър╕Вр╕нр╕Зр╕кр╕▓р╕вр╕ер╕▒р╕Ъ! ЁЯУжЁЯФР
pub struct MyBox<T> {
    ptr: *mut T,  // ЁЯОп р╕Хр╕▒р╕зр╕Кр╕╡р╣Йр╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕вр╣Др╕Ыр╕вр╕▒р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ
}

impl<T> MyBox<T> {
    pub fn new(value: T) -> Self {
        let ptr = Box::into_raw(Box::new(value));  // ЁЯФР р╣Ар╕Вр╣Йр╕▓р╕гр╕лр╕▒р╕кр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ
        Self { ptr }  // ЁЯУж р╕кр╕гр╣Йр╕▓р╕Зр╕Бр╕ер╣Ир╕нр╕Зр╣Ар╕Бр╣Зр╕Ър╕Вр╕нр╕Зр╕ер╕▒р╕Ъ
    }

    #[must_use]
    pub fn get(&self) -> &T {
        unsafe { &*self.ptr }  // ЁЯФН р╣Ар╕Ыр╕┤р╕Фр╕Фр╕╣р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ (р╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в!)
    }

    pub fn get_mut(&mut self) -> &mut T {
        unsafe { &mut *self.ptr }  // тЬПя╕П р╣Бр╕Бр╣Йр╣Др╕Вр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ (р╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕вр╕бр╕▓р╕Б!)
    }
}

impl<T> Drop for MyBox<T> {
    fn drop(&mut self) {
        unsafe {
            let _box = Box::from_raw(self.ptr);  // ЁЯЧСя╕П р╕Чр╕│р╕ер╕▓р╕вр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щр╕ер╕▒р╕Ъ
            // Box р╕Ир╕░ drop р╕Др╣Ир╕▓р╣Ар╕бр╕╖р╣Ир╕нр╕нр╕нр╕Бр╕Ир╕▓р╕Б scope - р╕Бр╕▓р╕гр╕ер╕Ър╕гр╕нр╕вр╣Ар╕Чр╣Йр╕▓! ЁЯС╗
        }
    }
}

// р╕Хр╣Йр╕нр╕Зр╣Гр╕Кр╣Й unsafe р╣Ар╕Юр╕╖р╣Ир╕н implement Send р╣Бр╕ер╕░ Sync - р╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Вр╣Йр╕▓р╕бр╕бр╕┤р╕Хр╕┤! ЁЯЪАЁЯМА
unsafe impl<T: Send> Send for MyBox<T> {}  // ЁЯУд р╕кр╣Ир╕Зр╕Бр╕ер╣Ир╕нр╕Зр╕ер╕▒р╕Ър╕Вр╣Йр╕▓р╕бр╣Ар╕Шр╕гр╕Ф
unsafe impl<T: Sync> Sync for MyBox<T> {}  // ЁЯФД р╣Бр╕Кр╕гр╣Мр╕Бр╕ер╣Ир╕нр╕Зр╕ер╕▒р╕Ър╕гр╕░р╕лр╕зр╣Ир╕▓р╕Зр╣Ар╕Шр╕гр╕Ф

pub fn custom_smart_pointer_examples() {
    println!("\nЁЯУжЁЯФР === Secret Box Operations === ЁЯХ╡я╕ПтАНтЩВя╕ПЁЯТА");

    let mut my_box = MyBox::new(String::from("Hello, Unsafe Rust!"));  // ЁЯУж р╕кр╕гр╣Йр╕▓р╕Зр╕Бр╕ер╣Ир╕нр╕Зр╣Ар╕Бр╣Зр╕Ър╕Др╕зр╕▓р╕бр╕ер╕▒р╕Ъ

    println!("ЁЯФНЁЯУЦ р╣Ар╕Ыр╕┤р╕Фр╕Фр╕╣р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ: {}", my_box.get());  // ЁЯСА р╣Бр╕нр╕Ър╕Фр╕╣р╕Вр╣Йр╕нр╕бр╕╣р╕е

    // р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╕Др╣Ир╕▓ - р╕Бр╕▓р╕гр╕Ыр╕ер╕нр╕бр╣Бр╕Ыр╕ер╕Зр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ! тЬПя╕ПЁЯФР
    my_box.get_mut().push_str(" - Modified");  // ЁЯУЭ р╣Бр╕Бр╣Йр╣Др╕Вр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ
    println!("тЬПя╕ПЁЯФР р╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ър╕лр╕ер╕▒р╕Зр╕Ыр╕ер╕нр╕бр╣Бр╕Ыр╕ер╕З: {}", my_box.get());

    // MyBox р╕Ир╕░ drop р╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤р╣Ар╕бр╕╖р╣Ир╕нр╕нр╕нр╕Бр╕Ир╕▓р╕Б scope - р╕Бр╕▓р╕гр╕Чр╕│р╕ер╕▓р╕вр╕лр╕ер╕▒р╕Бр╕Рр╕▓р╕Щ! ЁЯЧСя╕ПЁЯС╗
}

#[cfg(test)]
mod tests {
    use super::*;

    #[test]
    fn test_my_box() {  // ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕ер╣Ир╕нр╕Зр╣Ар╕Бр╣Зр╕Ър╕Др╕зр╕▓р╕бр╕ер╕▒р╕Ъ
        let mut my_box = MyBox::new(42);  // ЁЯУж р╕кр╕гр╣Йр╕▓р╕Зр╕Бр╕ер╣Ир╕нр╕Зр╕ер╕▒р╕Ъ
        assert_eq!(*my_box.get(), 42);    // ЁЯФН р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕ер╕▒р╕Ъ

        *my_box.get_mut() = 100;          // тЬПя╕П р╕Ыр╕ер╕нр╕бр╣Бр╕Ыр╕ер╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕е
        assert_eq!(*my_box.get(), 100);   // тЬЕ р╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Бр╕▓р╕гр╕Ыр╕ер╕нр╕бр╣Бр╕Ыр╕ер╕З
    }

    #[test]
    fn test_unsafe_trait() {  // ЁЯзк р╕Чр╕Фр╕кр╕нр╕Ър╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в
        let number = 42i32;  // ЁЯФв р╕кр╕▓р╕вр╕ер╕▒р╕Ър╕Хр╕▒р╕зр╣Ар╕ер╕В

        // р╕Чр╕Фр╕кр╕нр╕Ър╕зр╣Ир╕▓р╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Й unsafe method р╣Др╕Фр╣Й - р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕ар╕▓р╕гр╕Бр╕┤р╕И! тЪбЁЯТА
        number.unsafe_method();  // ЁЯОп р╕кр╕▒р╣Ир╕Зр╕Бр╕▓р╕гр╕кр╕▓р╕вр╕ер╕▒р╕Ъ

        // р╣Др╕бр╣Ир╕бр╕╡ assertion р╣Ар╕Юр╕гр╕▓р╕░р╣Ар╕Ыр╣Зр╕Щр╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ър╕зр╣Ир╕▓ compile р╣Др╕Фр╣Й - р╕Бр╕▓р╕гр╕вр╕╖р╕Щр╕вр╕▒р╕Щр╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Ц! тЬЕ
    }
}