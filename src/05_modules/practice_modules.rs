//! Practice Modules - Library Management System: р╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Фр╣Бр╕лр╣Ир╕Зр╕нр╕Щр╕▓р╕Др╕Х! ЁЯУЪЁЯЪА
//! р╕гр╕░р╕Ър╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Фр╕Чр╕╡р╣Ир╣Гр╕Кр╣Й Module System р╕Вр╕нр╕З Rust (р╣Ар╕Ыр╣Зр╕Щр╕Ър╕гр╕гр╕Ур╕▓р╕гр╕▒р╕Бр╕йр╣Мр╕Фр╕┤р╕Ир╕┤р╕Чр╕▒р╕е!)

// р╣Гр╕Кр╣Й #[allow(clippy::too_many_lines)] р╣Ар╕Юр╕гр╕▓р╕░р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Щр╕╡р╣Йр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕гр╕░р╕Ър╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф
// р╕Чр╕╡р╣Ир╕Др╕гр╕нр╕Ър╕Др╕ер╕╕р╕бр╕лр╕ер╕▓р╕вр╣Бр╕Щр╕зр╕Др╕┤р╕Фр╕Вр╕нр╕З Module System р╣Гр╕Щр╣Др╕Яр╕ер╣Мр╣Ар╕Фр╕╡р╕вр╕з р╣Ар╕Юр╕╖р╣Ир╕нр╕Др╕зр╕▓р╕бр╣Ар╕Вр╣Йр╕▓р╣Гр╕Ир╕Чр╕╡р╣Ир╕Хр╣Ир╕нр╣Ар╕Щр╕╖р╣Ир╕нр╕З
// (р╣Ар╕Ыр╣Зр╕Щр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Фр╕вр╕▒р╕Бр╕йр╣Мр╣Гр╕Щр╣Др╕Яр╕ер╣Мр╣Ар╕Фр╕╡р╕вр╕з! ЁЯПЫя╕П)
#[allow(clippy::too_many_lines)]
pub fn practice_modules() {
    // р╕гр╕░р╕Ър╕Ър╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф - р╣Бр╕кр╕Фр╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й Module System р╣Гр╕Щр╣Вр╕Ыр╕гр╣Ар╕Ир╕Др╕Ир╕гр╕┤р╕З (р╣Ар╕Ыр╣Зр╕Щр╕кр╕Цр╕▓р╕Ыр╕Щр╕┤р╕Бр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф! ЁЯПЧя╕П)
    mod library_system {  // р╕гр╕░р╕Ър╕Ър╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф: р╣Ар╕бр╕╖р╕нр╕Зр╣Бр╕лр╣Ир╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯПЩя╕ПЁЯУЪ
        pub mod books {  // р╣Вр╕бр╕Фр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Др╕ер╕▒р╕Зр╕кр╕бр╕Ър╕▒р╕Хр╕┤р╣Бр╕лр╣Ир╕Зр╕Др╕зр╕▓р╕бр╕гр╕╣р╣Й! ЁЯТОЁЯУЦ
            #[derive(Debug, Clone)]  // р╕Чр╕│р╣Гр╕лр╣Йр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Юр╕┤р╕бр╕Юр╣Мр╣Бр╕ер╕░р╕Др╕▒р╕Фр╕ер╕нр╕Бр╣Др╕Фр╣Й! ЁЯЦия╕ПЁЯУД
            pub struct Book {  // р╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: DNA р╕Вр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯзм
                pub id: u32,  // р╕гр╕лр╕▒р╕кр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Ър╕▒р╕Хр╕гр╕Ыр╕гр╕░р╕Кр╕▓р╕Кр╕Щр╕Вр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯЖФ
                pub title: String,  // р╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Ыр╣Йр╕▓р╕вр╕Кр╕╖р╣Ир╕нр╣Ар╕Ир╣Йр╕▓р╕Вр╕нр╕З! ЁЯУЫ
                pub author: String,  // р╕Ьр╕╣р╣Йр╣Бр╕Хр╣Ир╕З: р╕Юр╣Ир╕нр╣Бр╕бр╣Ир╕Вр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯСитАНЁЯТ╝
                // Field isbn р╣Гр╕Кр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Ар╕Бр╣Зр╕Ър╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
                // р╣Гр╕Кр╣Й #[allow(dead_code)] р╣Ар╕Юр╕гр╕▓р╕░ field р╕Щр╕╡р╣Йр╣Ар╕Ыр╣Зр╕Щр╕кр╣Ир╕зр╕Щр╕лр╕Щр╕╢р╣Ир╕Зр╕Вр╕нр╕Зр╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н
                // р╣Бр╕Хр╣Ир╣Др╕бр╣Ир╣Др╕Фр╣Йр╣Гр╕Кр╣Йр╣Гр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╕╡р╣Й р╣Ар╕Бр╣Зр╕Ър╣Др╕зр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Чр╕╡р╣Ир╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М
                // (р╕гр╕лр╕▒р╕кр╕ер╕▒р╕Ър╕Вр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯФв)
                #[allow(dead_code)]
                pub isbn: String,  // ISBN: р╕гр╕лр╕▒р╕кр╕Юр╕▒р╕Щр╕Шр╕╕р╕Бр╕гр╕гр╕бр╕Вр╕нр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯзм
                pub available: bool,  // р╕кр╕Цр╕▓р╕Щр╕░р╕зр╣Ир╕▓р╕З: р╣Др╕Яр╣Ар╕Вр╕╡р╕вр╕з-р╣Бр╕Фр╕З! ЁЯЪж
            }

            impl Book {  // р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Др╕╣р╣Ир╕бр╕╖р╕нр╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ! ЁЯУЛ
                pub fn new(id: u32, title: &str, author: &str, isbn: &str) -> Self {  // р╕кр╕гр╣Йр╕▓р╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕лр╕бр╣И: р╣Вр╕гр╕Зр╕Зр╕▓р╕Щр╕Ьр╕ер╕┤р╕Хр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯПн
                    Self {
                        id,  // р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕к! ЁЯП╖я╕П
                        title: title.to_string(),  // р╣Гр╕кр╣Ир╕Кр╕╖р╣Ир╕н! ЁЯУЭ
                        author: author.to_string(),  // р╣Гр╕кр╣Ир╕Ьр╕╣р╣Йр╣Бр╕Хр╣Ир╕З! тЬНя╕П
                        isbn: isbn.to_string(),  // р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕к ISBN! ЁЯФв
                        available: true,  // р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щр╕зр╣Ир╕▓р╕З! тЬЕ
                    }
                }

                pub fn borrow_book(&mut self) -> Result<(), String> {  // р╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╣Ар╕Кр╣Ир╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯдЭ
                    if self.available {  // р╕Цр╣Йр╕▓р╕зр╣Ир╕▓р╕З! ЁЯЯв
                        self.available = false;  // р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Ар╕Ыр╣Зр╕Щр╣Др╕бр╣Ир╕зр╣Ир╕▓р╕З! ЁЯФ┤
                        Ok(())  // р╕кр╕│р╣Ар╕гр╣Зр╕И! ЁЯОЙ
                    } else {
                        Err(format!("р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н '{}' р╣Др╕бр╣Ир╕зр╣Ир╕▓р╕З", self.title))  // р╣Др╕бр╣Ир╕зр╣Ир╕▓р╕З! тЭМ
                    }
                }

                pub const fn return_book(&mut self) {  // р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕кр╣Ир╕Зр╕Др╕╖р╕Щр╕Ър╣Йр╕▓р╕Щ! ЁЯПа
                    self.available = true;  // р╣Ар╕Ыр╕ер╕╡р╣Ир╕вр╕Щр╣Ар╕Ыр╣Зр╕Щр╕зр╣Ир╕▓р╕З! ЁЯЯв
                }
            }

            pub fn search_by_title<'a>(books: &'a [Book], title: &str) -> Vec<&'a Book> {  // р╕Др╣Йр╕Щр╕лр╕▓р╕Хр╕▓р╕бр╕Кр╕╖р╣Ир╕н: р╣Ар╕Ыр╣Зр╕Щр╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯХ╡я╕ПтАНтЩВя╕П
                books
                    .iter()  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╣Ар╕ер╣Ир╕б! ЁЯФД
                    .filter(|book| book.title.to_lowercase().contains(&title.to_lowercase()))  // р╕Бр╕гр╕нр╕Зр╕Хр╕▓р╕бр╕Кр╕╖р╣Ир╕н! ЁЯФН
                    .collect()  // р╕гр╕зр╕Ър╕гр╕зр╕бр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М! ЁЯУж
            }

            pub fn search_by_author<'a>(books: &'a [Book], author: &str) -> Vec<&'a Book> {  // р╕Др╣Йр╕Щр╕лр╕▓р╕Хр╕▓р╕бр╕Ьр╕╣р╣Йр╣Бр╕Хр╣Ир╕З: р╕лр╕▓р╕Ьр╕ер╕Зр╕▓р╕Щр╕Щр╕▒р╕Бр╣Ар╕Вр╕╡р╕вр╕Щ! тЬНя╕П
                books
                    .iter()  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╣Ар╕ер╣Ир╕б! ЁЯФД
                    .filter(|book| book.author.to_lowercase().contains(&author.to_lowercase()))  // р╕Бр╕гр╕нр╕Зр╕Хр╕▓р╕бр╕Ьр╕╣р╣Йр╣Бр╕Хр╣Ир╕З! ЁЯСитАНЁЯТ╝
                    .collect()  // р╕гр╕зр╕Ър╕гр╕зр╕бр╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М! ЁЯУж
            }
        }

        pub mod members {  // р╣Вр╕бр╕Фр╕╣р╕ер╕кр╕бр╕▓р╕Кр╕┤р╕Б: р╕Кр╕╕р╕бр╕Кр╕Щр╕Щр╕▒р╕Бр╕нр╣Ир╕▓р╕Щ! ЁЯСеЁЯУЪ
            #[derive(Debug, Clone)]  // р╕Чр╕│р╣Гр╕лр╣Йр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕Юр╕┤р╕бр╕Юр╣Мр╣Бр╕ер╕░р╕Др╕▒р╕Фр╕ер╕нр╕Бр╣Др╕Фр╣Й! ЁЯЦия╕ПЁЯСд
            pub struct Member {  // р╣Вр╕Др╕гр╕Зр╕кр╕гр╣Йр╕▓р╕Зр╕кр╕бр╕▓р╕Кр╕┤р╕Б: р╕Ър╕▒р╕Хр╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕Фр╕┤р╕Ир╕┤р╕Чр╕▒р╕е! ЁЯТ│
                pub id: u32,  // р╕гр╕лр╕▒р╕кр╕кр╕бр╕▓р╕Кр╕┤р╕Б: р╕лр╕бр╕▓р╕вр╣Ар╕ер╕Вр╕Ыр╕гр╕░р╕Ир╕│р╕Хр╕▒р╕з! ЁЯЖФ
                pub name: String,  // р╕Кр╕╖р╣Ир╕н: р╕Ыр╣Йр╕▓р╕вр╕Кр╕╖р╣Ир╕н! ЁЯУЫ
                pub email: String,  // р╕нр╕╡р╣Ар╕бр╕е: р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╕Фр╕┤р╕Ир╕┤р╕Чр╕▒р╕е! ЁЯУз
                pub borrowed_books: Vec<u32>,  // р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕вр╕╖р╕б: р╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯОТ (Book IDs)
            }

            impl Member {  // р╕Бр╕▓р╕гр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щр╕кр╕бр╕▓р╕Кр╕┤р╕Б: р╕Др╕╣р╣Ир╕бр╕╖р╕нр╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯУЦ
                pub fn new(id: u32, name: &str, email: &str) -> Self {  // р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕бр╕▓р╕Кр╕┤р╕Бр╣Гр╕лр╕бр╣И: р╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯУЭ
                    Self {
                        id,  // р╣Гр╕кр╣Ир╕гр╕лр╕▒р╕к! ЁЯП╖я╕П
                        name: name.to_string(),  // р╣Гр╕кр╣Ир╕Кр╕╖р╣Ир╕н! ЁЯУЫ
                        email: email.to_string(),  // р╣Гр╕кр╣Ир╕нр╕╡р╣Ар╕бр╕е! ЁЯУз
                        borrowed_books: Vec::new(),  // р╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕Ыр╕ер╣Ир╕▓! ЁЯОТ
                    }
                }

                pub fn borrow_book(&mut self, book_id: u32) {  // р╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╣Гр╕кр╣Ир╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯУЪтЮбя╕ПЁЯОТ
                    if !self.borrowed_books.contains(&book_id) {  // р╕Цр╣Йр╕▓р╕вр╕▒р╕Зр╣Др╕бр╣Ир╕бр╕╡! тЭМ
                        self.borrowed_books.push(book_id);  // р╣Гр╕кр╣Ир╣Ар╕Вр╣Йр╕▓р╣Др╕Ы! тЮХ
                    }
                }

                pub fn return_book(&mut self, book_id: u32) {  // р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╣Ар╕нр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯОТтЮбя╕ПЁЯУЪ
                    self.borrowed_books.retain(|&id| id != book_id);  // р╣Ар╕Бр╣Зр╕Ър╣Ар╕Йр╕Юр╕▓р╕░р╕Чр╕╡р╣Ир╣Др╕бр╣Ир╣Гр╕Кр╣Ир╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Щр╕╡р╣Й! ЁЯЧСя╕П
                }

                // Method р╕Щр╕╡р╣Йр╣Гр╕Кр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╕Щр╕▒р╕Ър╕Ир╕│р╕Щр╕зр╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕вр╕╖р╕б
                // р╣Гр╕Кр╣Й #[allow(dead_code)] р╣Ар╕Юр╕гр╕▓р╕░ method р╕Щр╕╡р╣Йр╣Ар╕Ыр╣Зр╕Щр╕кр╣Ир╕зр╕Щр╕лр╕Щр╕╢р╣Ир╕Зр╕Вр╕нр╕З API р╕Чр╕╡р╣Ир╕кр╕бр╕Ър╕╣р╕гр╕Ур╣М
                // р╣Бр╕Хр╣Ир╣Др╕бр╣Ир╣Др╕Фр╣Йр╣Гр╕Кр╣Йр╣Гр╕Щр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Щр╕╡р╣Й р╣Ар╕Бр╣Зр╕Ър╣Др╕зр╣Йр╣Ар╕Юр╕╖р╣Ир╕нр╣Бр╕кр╕Фр╕Зр╕Др╕зр╕▓р╕бр╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Вр╕нр╕З struct
                // (р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Щр╕▒р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯзо)
                #[allow(dead_code)]
                pub const fn get_borrowed_count(&self) -> usize {  // р╕Щр╕▒р╕Ър╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕Др╕┤р╕Фр╣Ар╕ер╕В! ЁЯзо
                    self.borrowed_books.len()  // р╕Др╕зр╕▓р╕бр╕вр╕▓р╕зр╕Вр╕нр╕Зр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯУП
                }
            }
        }

        pub mod transactions {  // р╣Вр╕бр╕Фр╕╣р╕ер╕Шр╕╕р╕гр╕Бр╕гр╕гр╕б: р╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯПжЁЯУЪ
            use super::books::Book;  // р╕Щр╕│р╣Ар╕Вр╣Йр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЦ
            use super::members::Member;  // р╕Щр╕│р╣Ар╕Вр╣Йр╕▓р╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯСд

            pub fn borrow_book(member: &mut Member, book: &mut Book) -> Result<String, String> {  // р╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Шр╕╕р╕гр╕Бр╕гр╕гр╕бр╕вр╕╖р╕б! ЁЯдЭ
                match book.borrow_book() {  // р╕ер╕нр╕Зр╕вр╕╖р╕б! ЁЯОп
                    Ok(()) => {  // р╕Цр╣Йр╕▓р╕кр╕│р╣Ар╕гр╣Зр╕И! тЬЕ
                        member.borrow_book(book.id);  // р╣Ар╕Юр╕┤р╣Ир╕бр╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯОТ
                        Ok(format!("тЬЕ {} р╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н '{}' р╕кр╕│р╣Ар╕гр╣Зр╕И", member.name, book.title))  // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕│р╣Ар╕гр╣Зр╕И! ЁЯОЙ
                    }
                    Err(error) => Err(error),  // р╕Цр╣Йр╕▓р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з! тЭМ
                }
            }

            pub fn return_book(member: &mut Member, book: &mut Book) -> String {  // р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Шр╕╕р╕гр╕Бр╕гр╕гр╕бр╕Др╕╖р╕Щ! ЁЯФД
                book.return_book();  // р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЪ
                member.return_book(book.id);  // р╣Ар╕нр╕▓р╕нр╕нр╕Бр╕Ир╕▓р╕Бр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯОТ
                format!("ЁЯУЪ {} р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н '{}' р╣Бр╕ер╣Йр╕з", member.name, book.title)  // р╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Др╕╖р╕Щ! ЁЯПа
            }

            pub fn get_member_books<'a>(member: &Member, books: &'a [Book]) -> Vec<&'a Book> {  // р╕Фр╕╣р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Вр╕нр╕Зр╕кр╕бр╕▓р╕Кр╕┤р╕Б: р╕Хр╕гр╕зр╕Ир╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯОТЁЯСА
                books
                    .iter()  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╣Ар╕ер╣Ир╕б! ЁЯФД
                    .filter(|book| member.borrowed_books.contains(&book.id))  // р╕Бр╕гр╕нр╕Зр╣Ар╕Йр╕Юр╕▓р╕░р╕Чр╕╡р╣Ир╕нр╕вр╕╣р╣Ир╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯФН
                    .collect()  // р╕гр╕зр╕Ър╕гр╕зр╕б! ЁЯУж
            }
        }

        // Re-exports р╕кр╕│р╕лр╕гр╕▒р╕Ъ convenience (р╕кр╣Ир╕Зр╕нр╕нр╕Бр╣Гр╕лр╕бр╣Ир╣Ар╕Юр╕╖р╣Ир╕нр╕Др╕зр╕▓р╕бр╕кр╕░р╕Фр╕зр╕Б: р╕Ыр╕гр╕░р╕Хр╕╣р╕ер╕▒р╕Ф! ЁЯЪк)
        pub use books::{Book, search_by_author, search_by_title};  // р╕кр╣Ир╕Зр╕нр╕нр╕Бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЦ
        pub use members::Member;  // р╕кр╣Ир╕Зр╕нр╕нр╕Бр╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯСд
        pub use transactions::{borrow_book, get_member_books, return_book};  // р╕кр╣Ир╕Зр╕нр╕нр╕Бр╕Шр╕╕р╕гр╕Бр╕гр╕гр╕б! ЁЯПж
    }  // р╕Ир╕Ър╕гр╕░р╕Ър╕Ър╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф! ЁЯПБ

    println!("ЁЯУЪ === Library Management System: р╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Фр╣Бр╕лр╣Ир╕Зр╕нр╕Щр╕▓р╕Др╕Х! === ЁЯУЪ");

    // р╕кр╕гр╣Йр╕▓р╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н (р╣Ар╕Ыр╕┤р╕Фр╣Вр╕гр╕Зр╕Зр╕▓р╕Щр╕Ьр╕ер╕┤р╕Хр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯПн)
    let mut books = vec![  // р╕Др╕ер╕▒р╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЪ
        library_system::Book::new(  // р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Чр╕╡р╣И 1! ЁЯУЦ
            1,
            "The Rust Programming Language",
            "Steve Klabnik",
            "978-1593278281",
        ),
        library_system::Book::new(2, "Programming Rust", "Jim Blandy", "978-1491927281"),  // р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Чр╕╡р╣И 2! ЁЯУЧ
        library_system::Book::new(3, "Rust in Action", "Tim McNamara", "978-1617294556"),  // р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Чр╕╡р╣И 3! ЁЯУШ
    ];

    // р╕кр╕гр╣Йр╕▓р╕Зр╕кр╕бр╕▓р╕Кр╕┤р╕Б (р╣Ар╕Ыр╕┤р╕Фр╕гр╕▒р╕Ър╕кр╕бр╕▒р╕Др╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯУЭ)
    let mut members = vec![  // р╕Кр╕╕р╕бр╕Кр╕Щр╕Щр╕▒р╕Бр╕нр╣Ир╕▓р╕Щ! ЁЯСе
        library_system::Member::new(1, "р╕нр╕ер╕┤р╕Л", "alice@example.com"),  // р╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕Др╕Щр╕Чр╕╡р╣И 1! ЁЯСй
        library_system::Member::new(2, "р╕Ър╣Зр╕нр╕Ъ", "bob@example.com"),  // р╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕Др╕Щр╕Чр╕╡р╣И 2! ЁЯСи
    ];

    println!("\nЁЯУЦ р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╣Бр╕Др╕Хр╕Хр╕▓р╕ер╣Зр╕нр╕Бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЛ");
    for book in &books {  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╣Ар╕ер╣Ир╕б! ЁЯФД
        println!(
            "  {}. '{}' р╣Вр╕Фр╕в {} ({})",  // р╣Бр╕кр╕Фр╕Зр╕гр╕▓р╕вр╕ер╕░р╣Ар╕нр╕╡р╕вр╕Ф! ЁЯУЭ
            book.id,
            book.title,
            book.author,
            if book.available {
                "р╕зр╣Ир╕▓р╕З"  // р╣Др╕Яр╣Ар╕Вр╕╡р╕вр╕з! ЁЯЯв
            } else {
                "р╣Др╕бр╣Ир╕зр╣Ир╕▓р╕З"  // р╣Др╕Яр╣Бр╕Фр╕З! ЁЯФ┤
            }
        );
    }

    println!("\nЁЯСе р╕гр╕▓р╕вр╕Бр╕▓р╕гр╕кр╕бр╕▓р╕Кр╕┤р╕Б: р╕Чр╕░р╣Ар╕Ър╕╡р╕вр╕Щр╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯУЛ");
    for member in &members {  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╕Др╕Щ! ЁЯФД
        println!("  {}. {} ({})", member.id, member.name, member.email);  // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯСд
    }

    // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕вр╕╖р╕б-р╕Др╕╖р╕Щ (р╣Ар╕Ыр╕┤р╕Фр╕Шр╕Щр╕▓р╕Др╕▓р╕гр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯПж)
    println!("\nЁЯУЛ === р╕Бр╕▓р╕гр╕вр╕╖р╕б-р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕Шр╕╕р╕гр╕Бр╕гр╕гр╕бр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф! === ЁЯУЛ");

    match library_system::borrow_book(&mut members[0], &mut books[0]) {  // р╕нр╕ер╕┤р╕Лр╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╣Бр╕гр╕Б! ЁЯСйЁЯУЦ
        Ok(message) => println!("ЁЯУЭ {message}"),  // р╕кр╕│р╣Ар╕гр╣Зр╕И! тЬЕ
        Err(error) => println!("тЭМ {error}"),  // р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з! тЭМ
    }

    match library_system::borrow_book(&mut members[1], &mut books[1]) {  // р╕Ър╣Зр╕нр╕Ър╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╕Чр╕╡р╣Ир╕кр╕нр╕З! ЁЯСиЁЯУЧ
        Ok(message) => println!("ЁЯУЭ {message}"),  // р╕кр╕│р╣Ар╕гр╣Зр╕И! тЬЕ
        Err(error) => println!("тЭМ {error}"),  // р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з! тЭМ
    }

    // р╕ер╕нр╕Зр╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Ар╕ер╣Ир╕бр╣Ар╕Фр╕┤р╕бр╕нр╕╡р╕Бр╕Др╕гр╕▒р╣Йр╕З (р╕Чр╕Фр╕кр╕нр╕Ър╕гр╕░р╕Ър╕Ър╕Ыр╣Йр╕нр╕Зр╕Бр╕▒р╕Щ! ЁЯЫбя╕П)
    match library_system::borrow_book(&mut members[1], &mut books[0]) {  // р╕Ър╣Зр╕нр╕Ър╕ер╕нр╕Зр╕вр╕╖р╕бр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Вр╕нр╕Зр╕нр╕ер╕┤р╕Л! ЁЯСитЮбя╕ПЁЯУЦ
        Ok(message) => println!("ЁЯУЭ {message}"),  // р╕кр╕│р╣Ар╕гр╣Зр╕И! тЬЕ
        Err(error) => println!("тЭМ {error}"),  // р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з! тЭМ
    }

    // р╣Бр╕кр╕Фр╕Зр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕кр╕бр╕▓р╕Кр╕┤р╕Бр╕вр╕╖р╕б (р╕Хр╕гр╕зр╕Ир╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯОТ)
    println!("\nЁЯУЪ === р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕вр╕╖р╕б: р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! === ЁЯУЪ");
    for member in &members {  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╕кр╕бр╕▓р╕Кр╕┤р╕Б! ЁЯФД
        let borrowed = library_system::get_member_books(member, &books);  // р╕Фр╕╣р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯСА
        println!("ЁЯСд {} р╕вр╕╖р╕б {} р╣Ар╕ер╣Ир╕б:", member.name, borrowed.len());  // р╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Ир╕│р╕Щр╕зр╕Щ! ЁЯУК
        for book in borrowed {  // р╕зр╕Щр╕Фр╕╣р╕Чр╕╕р╕Бр╣Ар╕ер╣Ир╕бр╣Гр╕Щр╕Бр╕гр╕░р╣Ар╕Ыр╣Лр╕▓! ЁЯФД
            println!("  - '{}'", book.title);  // р╣Бр╕кр╕Фр╕Зр╕Кр╕╖р╣Ир╕нр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯУЦ
        }
    }

    // р╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н (р╕Шр╕╕р╕гр╕Бр╕гр╕гр╕бр╕Др╕╖р╕Щ! ЁЯФД)
    println!("\nЁЯФД === р╕Бр╕▓р╕гр╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н: р╕кр╣Ир╕Зр╕Др╕╖р╕Щр╕Ър╣Йр╕▓р╕Щ! === ЁЯФД");
    let return_message = library_system::return_book(&mut members[0], &mut books[0]);  // р╕нр╕ер╕┤р╕Лр╕Др╕╖р╕Щр╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н! ЁЯСйЁЯУЪ
    println!("ЁЯУЭ {return_message}");  // р╣Бр╕кр╕Фр╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕Др╕╖р╕Щ! ЁЯУЭ

    // р╕Др╣Йр╕Щр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н (р╣Ар╕Ыр╣Зр╕Щр╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф! ЁЯХ╡я╕ПтАНтЩВя╕П)
    println!("\nЁЯФН === р╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓: р╕ар╕▓р╕гр╕Бр╕┤р╕Ир╕Щр╕▒р╕Бр╕кр╕╖р╕Ъ! === ЁЯФН");
    let rust_books = library_system::search_by_title(&books, "rust");  // р╕Др╣Йр╕Щр╕лр╕▓р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕н Rust! ЁЯжА
    println!("ЁЯУЪ р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Чр╕╡р╣Ир╕бр╕╡р╕Др╕│р╕зр╣Ир╕▓ 'rust': {} р╣Ар╕ер╣Ир╕б (р╕Юр╕Ър╕кр╕бр╕Ър╕▒р╕Хр╕┤!)", rust_books.len());
    for book in rust_books {  // р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕Бр╕▓р╕гр╕Др╣Йр╕Щр╕лр╕▓! ЁЯУЛ
        println!("  - '{}' р╣Вр╕Фр╕в {} (р╣Ар╕Ир╕нр╣Бр╕ер╣Йр╕з!)", book.title, book.author);
    }

    let steve_books = library_system::search_by_author(&books, "steve");  // р╕Др╣Йр╕Щр╕лр╕▓р╕Ьр╕ер╕Зр╕▓р╕Щ Steve! ЁЯСитАНЁЯТ╝
    println!("\nЁЯСитАНЁЯТ╝ р╕лр╕Щр╕▒р╕Зр╕кр╕╖р╕нр╕Вр╕нр╕З Steve: {} р╣Ар╕ер╣Ир╕б (р╕Ьр╕ер╕Зр╕▓р╕Щр╕бр╕▓р╕кр╣Ар╕Хр╕нр╕гр╣М!)", steve_books.len());
    for book in steve_books {  // р╣Бр╕кр╕Фр╕Зр╕Ьр╕ер╕Зр╕▓р╕Щ! ЁЯУЪ
        println!("  - '{}' (р╕Ьр╕ер╕Зр╕▓р╕Щр╣Ар╕Фр╣Зр╕Ф!)", book.title);
    }

    println!("\nЁЯОЙ р╕Ир╕Ър╣Бр╕Ър╕Ър╕Эр╕╢р╕Бр╕лр╕▒р╕Ф Module System! (р╕Ир╕Ър╕Бр╕▓р╕гр╕Ьр╕Ир╕Нр╕ар╕▒р╕вр╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф! ЁЯПЖ)");
}

#[cfg(test)]  // р╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ: р╕лр╣Йр╕нр╕Зр╣Бр╕ер╣Зр╕Ър╕Чр╕Фр╕ер╕нр╕З! ЁЯзк
mod tests {  // р╣Вр╕бр╕Фр╕╣р╕ер╕Чр╕Фр╕кр╕нр╕Ъ: р╕лр╣Йр╕нр╕Зр╕Чр╕Фр╕кр╕нр╕Ъ! ЁЯФм
    // р╕ер╕Ъ unused import super::* р╣Ар╕Щр╕╖р╣Ир╕нр╕Зр╕Ир╕▓р╕Бр╣Др╕бр╣Ир╣Др╕Фр╣Йр╣Гр╕Кр╣Йр╕Зр╕▓р╕Щ (р╕Чр╕│р╕Др╕зр╕▓р╕бр╕кр╕░р╕нр╕▓р╕Ф! ЁЯз╣)

    #[test]  // р╕Чр╕Фр╕кр╕нр╕Ър╕Чр╕╡р╣И 1: р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕бр╕нр╕Зр╣Ар╕лр╣Зр╕Щ! ЁЯСА
    fn test_module_visibility() {  // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕бр╕нр╕Зр╣Ар╕лр╣Зр╕Щр╣Вр╕бр╕Фр╕╣р╕е! ЁЯФН
        mod test_mod {  // р╣Вр╕бр╕Фр╕╣р╕ер╕Чр╕Фр╕кр╕нр╕Ъ! ЁЯзк
            pub fn public_fn() -> i32 {  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕▓р╕Шр╕▓р╕гр╕Ур╕░! ЁЯФУ
                private_fn() + 10  // р╣Ар╕гр╕╡р╕вр╕Бр╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з + 10! тЮХ
            }

            fn private_fn() -> i32 {  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╣Ир╕зр╕Щр╕Хр╕▒р╕з! ЁЯФТ
                42  // р╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕бр╕лр╕▒р╕ир╕Ир╕гр╕гр╕вр╣М! тЬи
            }
        }

        assert_eq!(test_mod::public_fn(), 52);  // р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М! тЬЕ
    }

    #[test]  // р╕Чр╕Фр╕кр╕нр╕Ър╕Чр╕╡р╣И 2: р╕Чр╕Фр╕кр╕нр╕Ъ use statements! ЁЯУе
    fn test_use_statements() {  // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╣Гр╕Кр╣Й use! ЁЯОп
        mod math {  // р╣Вр╕бр╕Фр╕╣р╕ер╕Др╕Ур╕┤р╕Хр╕ир╕▓р╕кр╕Хр╕гр╣М! ЁЯзо
            pub fn add(a: i32, b: i32) -> i32 {  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Ър╕зр╕Б! тЮХ
                a + b  // р╕Ър╕зр╕Бр╕Бр╕▒р╕Щ! ЁЯФв
            }

            pub fn multiply(a: i32, b: i32) -> i32 {  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Др╕╣р╕У! тЬЦя╕П
                a * b  // р╕Др╕╣р╕Ур╕Бр╕▒р╕Щ! ЁЯФв
            }
        }

        use math::{add, multiply};  // р╕Щр╕│р╣Ар╕Вр╣Йр╕▓р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щ! ЁЯУе

        assert_eq!(add(2, 3), 5);  // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Ър╕зр╕Б! тЬЕ
        assert_eq!(multiply(4, 5), 20);  // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕Др╕╣р╕У! тЬЕ
    }

    #[test]  // р╕Чр╕Фр╕кр╕нр╕Ър╕Чр╕╡р╣И 3: р╕Чр╕Фр╕кр╕нр╕Ъ re-export! ЁЯФД
    fn test_reexporting() {  // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕нр╕нр╕Бр╣Гр╕лр╕бр╣И! ЁЯУд
        mod library {  // р╣Вр╕бр╕Фр╕╣р╕ер╕лр╣Йр╕нр╕Зр╕кр╕бр╕╕р╕Ф! ЁЯУЪ
            mod internal {  // р╣Вр╕бр╕Фр╕╣р╕ер╕ар╕▓р╕вр╣Гр╕Щ! ЁЯПа
                pub fn helper() -> String {  // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Кр╣Ир╕зр╕в! ЁЯдЭ
                    String::from("helper")  // р╕Др╕╖р╕Щр╕Др╣Ир╕▓ "helper"! ЁЯУЭ
                }
            }

            pub use internal::helper;  // Re-export (р╕кр╣Ир╕Зр╕нр╕нр╕Бр╣Гр╕лр╕бр╣И! ЁЯФД)
        }

        assert_eq!(library::helper(), "helper");  // р╕Чр╕Фр╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕нр╕нр╕Бр╣Гр╕лр╕бр╣И! тЬЕ
    }
}  // р╕Ир╕Ър╕Бр╕▓р╕гр╕Чр╕Фр╕кр╕нр╕Ъ! ЁЯПБ
