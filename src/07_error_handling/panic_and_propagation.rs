/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й Panic р╣Бр╕ер╕░ Error Propagation - р╣Вр╕гр╕Зр╣Ар╕гр╕╡р╕вр╕Щр╕Щр╕▒р╕Бр╕Фр╕▒р╕Ър╣Ар╕Юр╕ер╕┤р╕Зр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф! ЁЯЪТЁЯФе
///
/// # Panics
///
/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Щр╕╡р╣Йр╕Ир╕░ panic р╣Ар╕бр╕╖р╣Ир╕нр╣Ар╕гр╕╡р╕вр╕Бр╣Гр╕Кр╣Йр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Чр╕╡р╣Ир╕кр╕▓р╕Шр╕┤р╕Х panic! macro (р╣Бр╕Хр╣Ир╣Ар╕гр╕▓р╕Ир╕░р╣Др╕бр╣Ир╣Гр╕лр╣Йр╕бр╕▒р╕Щр╕гр╕░р╣Ар╕Ър╕┤р╕Фр╕Ир╕гр╕┤р╕Зр╣Ж! ЁЯТг)
pub fn learn_panic_and_error_propagation() {
    println!("\nЁЯТе === Panic р╣Бр╕ер╕░ Error Propagation: р╕гр╕░р╕Ър╕Ър╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕ар╕▒р╕вр╕кр╕╕р╕Фр╣Ар╕Ир╣Лр╕З! === ЁЯТе");

    // Panic - р╣Ар╕бр╕╖р╣Ир╕нр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Фр╕│р╣Ар╕Щр╕┤р╕Щр╕Бр╕▓р╕гр╕Хр╣Ир╕нр╣Др╕Фр╣Й (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╕Бр╕Фр╕Ыр╕╕р╣Ир╕бр╕Йр╕╕р╕Бр╣Ар╕Йр╕┤р╕Щ! ЁЯЪи)
    println!("\nЁЯЪи === Panic: р╕Ыр╕╕р╣Ир╕бр╕Йр╕╕р╕Бр╣Ар╕Йр╕┤р╕Щр╕Вр╕нр╕Зр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕б! === ЁЯЪи");

    // р╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕З panic (р╣Бр╕кр╕Фр╕Зр╕Др╕зр╕▓р╕бр╕Др╕┤р╕Фр╣Ар╕лр╣Зр╕Щр╣Ар╕Юр╕╖р╣Ир╕нр╣Др╕бр╣Ир╣Гр╕лр╣Йр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕гр╕░р╣Ар╕Ър╕┤р╕Ф! ЁЯТе)
    // panic!("р╕Щр╕╡р╣Ир╕Др╕╖р╕н panic message! (р╕гр╕░р╣Ар╕Ър╕┤р╕Фр╣Бр╕ер╣Йр╕з! ЁЯТг)");

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й unwrap р╕Чр╕╡р╣Ир╕нр╕▓р╕Ир╕Чр╕│р╣Гр╕лр╣Йр╣Ар╕Бр╕┤р╕Ф panic (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╣Ар╕ер╣Ир╕Щр╣Др╕Я! ЁЯФе)
    let _some_value = Some(42);
    println!("р╕Др╣Ир╕▓р╕Чр╕╡р╣Ир╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в: 42 (р╣Др╕бр╣Ир╕бр╕╡р╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в! тЬЕ)"); // р╣Бр╕Чр╕Щр╕Чр╕╡р╣И some_value.unwrap()

    // let none_value: Option<i32> = None;
    // println!("unwrap р╕Чр╕╡р╣Ир╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕в: {}", none_value.unwrap()); // р╕Ир╕░ panic! (р╕гр╕░р╣Ар╕Ър╕┤р╕Ф! ЁЯТе)

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й match р╣Бр╕Чр╕Щ expect р╣Ар╕Юр╕╖р╣Ир╕н handle error р╕нр╕вр╣Ир╕▓р╕Зр╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в (р╣Др╕бр╣Ир╕бр╕╡р╕гр╕░р╣Ар╕Ър╕┤р╕Ф! ЁЯТМ)
    let result = "42".parse::<i32>();
    match result {
        Ok(number) => println!("р╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Чр╕╡р╣Ир╣Бр╕Ыр╕ер╕Зр╣Др╕Фр╣Й: {number} (р╣Ар╕вр╣Й! р╣Др╕Фр╣Йр╣Бр╕ер╣Йр╕з! ЁЯОЙ)"),
        Err(e) => println!("тЭМ р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╣Бр╕Ыр╕ер╕Зр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Др╕Фр╣Й: {e} (р╕нр╕░р╣Др╕гр╕Бр╕▒р╕Щ! ЁЯШ▒)"),
    }

    // Error Propagation р╕Фр╣Йр╕зр╕в ? operator - р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╕кр╣Ир╕Зр╕Хр╣Ир╕нр╕Вр╣Ир╕▓р╕зр╕гр╣Йр╕▓р╕в! ЁЯУв
    println!("\nЁЯФД === Error Propagation: р╕гр╕░р╕Ър╕Ър╕кр╣Ир╕Зр╕Хр╣Ир╕нр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Бр╕Ър╕Ър╕бр╕╖р╕нр╕нр╕▓р╕Кр╕╡р╕Ю! === ЁЯФД");

    fn read_username_from_file() -> Result<String, std::io::Error> {
        // р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╕нр╣Ир╕▓р╕Щр╣Др╕Яр╕ер╣М (р╣Бр╕Бр╕ер╣Йр╕Зр╕Чр╕│р╣Ар╕Ыр╣Зр╕Щр╕нр╣Ир╕▓р╕Щр╣Др╕Яр╕ер╣Мр╕Ир╕гр╕┤р╕Зр╣Ж! ЁЯУБ)
        // р╣Гр╕Щр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Ир╕гр╕┤р╕Зр╕Ир╕░р╣Гр╕Кр╣Й std::fs::read_to_string (р╣Бр╕Хр╣Ир╣Ар╕гр╕▓р╕Вр╕╡р╣Йр╣Ар╕Бр╕╡р╕вр╕И! ЁЯШЕ)
        Ok(String::from("john_doe"))  // р╣Др╕Фр╣Й username р╕бр╕▓р╣Бр╕ер╣Йр╕з! ЁЯОЙ
    }

    fn get_user_id_from_username(username: String) -> Result<u32, std::num::ParseIntError> {
        // р╕Ир╕│р╕ер╕нр╕Зр╕Бр╕▓р╕гр╣Бр╕Ыр╕ер╕З username р╣Ар╕Ыр╣Зр╕Щ ID (р╕гр╕░р╕Ър╕Ър╕Рр╕▓р╕Щр╕Вр╣Йр╕нр╕бр╕╣р╕ер╕Ир╕│р╕ер╕нр╕З! ЁЯЧГя╕П)
        match username.as_str() {
            "john_doe" => Ok(12345),    // р╕гр╕╣р╣Йр╕Ир╕▒р╕Бр╕Др╕Щр╕Щр╕╡р╣Й! ЁЯСЛ
            "jane_smith" => Ok(67890),  // р╕гр╕╣р╣Йр╕Ир╕▒р╕Бр╕Др╕Щр╕Щр╕╡р╣Йр╕Фр╣Йр╕зр╕в! ЁЯСЛ
            _ => "0".parse(), // р╣Др╕бр╣Ир╕гр╕╣р╣Йр╕Ир╕▒р╕Б! р╕кр╣Ир╕З error р╣Др╕Ы! ЁЯЪл
        }
    }

    // р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕Чр╕╡р╣Ир╣Гр╕Кр╣Й ? operator р╕кр╕│р╕лр╕гр╕▒р╕Ъ error propagation (р╕гр╕░р╕Ър╕Ър╕кр╣Ир╕Зр╕Хр╣Ир╕нр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕нр╕▒р╕Хр╣Вр╕Щр╕бр╕▒р╕Хр╕┤! ЁЯдЦ)
    fn get_user_id() -> Result<u32, Box<dyn std::error::Error>> {
        let username = read_username_from_file()?; // р╕Цр╣Йр╕▓ error р╕Ир╕░р╕лр╕Щр╕╡р╕Чр╕▒р╕Щр╕Чр╕╡! ЁЯПГтАНтЩВя╕ПЁЯТи
        let user_id = get_user_id_from_username(username)?; // р╕Цр╣Йр╕▓ error р╕Ир╕░р╕лр╕Щр╕╡р╕нр╕╡р╕Бр╕гр╕нр╕Ъ! ЁЯПГтАНтЩВя╕ПЁЯТи
        Ok(user_id)  // р╕Чр╕╕р╕Бр╕нр╕вр╣Ир╕▓р╕Зр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕в! р╕кр╣Ир╕З ID р╕Бр╕ер╕▒р╕Ър╣Др╕Ы! ЁЯОБ
    }

    match get_user_id() {
        Ok(id) => println!("тЬЕ User ID: {id} (р╣Ар╕Ир╕нр╣Бр╕ер╣Йр╕з! ЁЯОп)"),
        Err(error) => println!("тЭМ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {error} (р╕нр╕╕р╣Кр╕Ыр╕кр╣М! ЁЯджтАНтЩВя╕П)"),
    }

    // Custom Error Types - р╕нр╕нр╕Бр╣Бр╕Ър╕Ър╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Ар╕нр╕З! ЁЯОи
    println!("\nЁЯОи === Custom Error Types: р╕гр╣Йр╕▓р╕Щр╕Хр╕▒р╕Фр╣Ар╕кр╕╖р╣Йр╕нр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф! === ЁЯОи");

    #[derive(Debug)]
    enum MathError {
        DivisionByZero,        // р╕лр╕▓р╕гр╕Фр╣Йр╕зр╕вр╕ир╕╣р╕Щр╕вр╣М (р╕лр╣Йр╕▓р╕бр╕Чр╕│! ЁЯЪл)
        NegativeSquareRoot,    // р╕гр╕▓р╕Бр╕Чр╕╡р╣Ир╕кр╕нр╕Зр╕Вр╕нр╕Зр╕Ир╕│р╕Щр╕зр╕Щр╕ер╕Ъ (р╣Ар╕Ыр╣Зр╕Щр╣Др╕Ыр╣Др╕бр╣Ир╣Др╕Фр╣Й! ЁЯдп)
    }

    impl std::fmt::Display for MathError {
        fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
            match self {
                Self::DivisionByZero => write!(f, "р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕▓р╕гр╕Фр╣Йр╕зр╕вр╕ир╕╣р╕Щр╕вр╣Мр╣Др╕Фр╣Й (р╕Др╕Ур╕┤р╕Хр╕ир╕▓р╕кр╕Хр╕гр╣Мр╣Др╕бр╣Ир╕нр╕Щр╕╕р╕Нр╕▓р╕Х! ЁЯЪлЁЯУР)"),
                Self::NegativeSquareRoot => write!(f, "р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕▓р╕Др╣Ир╕▓р╕гр╕▓р╕Бр╕Чр╕╡р╣Ир╕кр╕нр╕Зр╕Вр╕нр╕Зр╕Ир╕│р╕Щр╕зр╕Щр╕ер╕Ър╣Др╕Фр╣Й (р╕Ир╕┤р╕Щр╕Хр╕Щр╕▓р╕Бр╕▓р╕гр╣Ар╕Бр╕┤р╕Щр╣Др╕Ы! ЁЯдп)"),
            }
        }
    }

    impl std::error::Error for MathError {}

    fn safe_divide_and_sqrt(a: f64, b: f64) -> Result<f64, MathError> {
        if b == 0.0 {
            return Err(MathError::DivisionByZero);  // р╕лр╕вр╕╕р╕Ф! р╕лр╣Йр╕▓р╕бр╕лр╕▓р╕гр╕Фр╣Йр╕зр╕вр╕ир╕╣р╕Щр╕вр╣М! ЁЯЫС
        }

        let result = a / b;
        if result < 0.0 {
            return Err(MathError::NegativeSquareRoot);  // р╕лр╕вр╕╕р╕Ф! р╕Ир╕│р╕Щр╕зр╕Щр╕ер╕Ър╣Др╕бр╣Ир╕бр╕╡р╕гр╕▓р╕Бр╕Чр╕╡р╣Ир╕кр╕нр╕З! ЁЯЫС
        }

        Ok(result.sqrt())  // р╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в! р╕Др╕│р╕Щр╕зр╕Ур╣Др╕Фр╣Й! тЬЕ
    }

    println!("\nЁЯзо === р╕Чр╕Фр╕кр╕нр╕Ър╕гр╕░р╕Ър╕Ър╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╕Чр╕╡р╣Ир╕нр╕нр╕Бр╣Бр╕Ър╕Ър╣Ар╕нр╕З! === ЁЯзо");

    match safe_divide_and_sqrt(16.0, 4.0) {
        Ok(result) => println!("тЬЕ тИЪ(16/4) = {result} (р╣Ар╕вр╕╡р╣Ир╕вр╕б! р╕Др╕│р╕Щр╕зр╕Ур╣Др╕Фр╣Й! ЁЯОп)"),
        Err(error) => println!("тЭМ {error} (р╣Ар╕кр╕╡р╕вр╣Гр╕Ир╕Фр╣Йр╕зр╕в ЁЯШФ)"),
    }

    match safe_divide_and_sqrt(16.0, 0.0) {
        Ok(result) => println!("тЬЕ тИЪ(16/0) = {result} (р╣Ар╕вр╕╡р╣Ир╕вр╕б! р╕Др╕│р╕Щр╕зр╕Ур╣Др╕Фр╣Й! ЁЯОп)"),
        Err(error) => println!("тЭМ {error} (р╕Др╕▓р╕Фр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕з! ЁЯджтАНтЩВя╕П)"),
    }

    match safe_divide_and_sqrt(-16.0, 4.0) {
        Ok(result) => println!("тЬЕ тИЪ(-16/4) = {result} (р╣Ар╕вр╕╡р╣Ир╕вр╕б! р╕Др╕│р╕Щр╕зр╕Ур╣Др╕Фр╣Й! ЁЯОп)"),
        Err(error) => println!("тЭМ {error} (р╕Др╕▓р╕Фр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕зр╣Ар╕Кр╣Ир╕Щр╕Бр╕▒р╕Щ! ЁЯд╖тАНтЩВя╕П)"),
    }
}
