/// р╕Яр╕▒р╕Зр╕Бр╣Мр╕Кр╕▒р╕Щр╕кр╕│р╕лр╕гр╕▒р╕Ър╣Ар╕гр╕╡р╕вр╕Щр╕гр╕╣р╣Й Result р╣Бр╕ер╕░ Option - р╣Вр╕гр╕Зр╣Ар╕гр╕╡р╕вр╕Щр╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Фр╣Бр╕Ър╕Ъ Sherlock Holmes! ЁЯХ╡я╕ПтАНтЩВя╕ПЁЯФН
pub fn learn_result_and_option() {
    println!("\nЁЯОп === Result р╣Бр╕ер╕░ Option: р╣Ар╕Др╕гр╕╖р╣Ир╕нр╕Зр╕бр╕╖р╕нр╕Щр╕▒р╕Бр╕кр╕╖р╕Ър╕бр╕╖р╕нр╣Вр╕Ыр╕гр╣Бр╕Ър╕Ъ detective toolkit! === ЁЯОп");

    // Option enum - р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Др╣Ир╕▓р╕Чр╕╡р╣Ир╕нр╕▓р╕Ир╕бр╕╡р╕лр╕гр╕╖р╕нр╣Др╕бр╣Ир╕бр╕╡ (р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▒р╕Ър╕Бр╕▓р╕гр╣Ар╕ер╣Ир╕Щр╕Лр╣Ир╕нр╕Щр╕лр╕▓р╣Бр╕Ър╕Ъ hide and seek! ЁЯЩИ)
    println!("\nЁЯУж === Option Enum: р╕Бр╕ер╣Ир╕нр╕Зр╕ер╕╢р╕Бр╕ер╕▒р╕Ър╕Чр╕╡р╣Ир╕нр╕▓р╕Ир╕бр╕╡р╕Вр╕нр╕Зр╕Вр╕зр╕▒р╕Нр╣Бр╕Ър╕Ъ mystery box! === ЁЯУж");

    let some_number = Some(5);
    let some_string = Some("Hello");
    let absent_number: Option<i32> = None;

    println!("some_number: {some_number:?}");
    println!("some_string: {some_string:?}");
    println!("absent_number: {absent_number:?}");

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й match р╕Бр╕▒р╕Ъ Option - р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╣Ар╕Ыр╕┤р╕Фр╕Бр╕ер╣Ир╕нр╕Зр╕ер╕╢р╕Бр╕ер╕▒р╕Ър╣Бр╕Ър╕Ъ unboxing video! ЁЯОБ
    match some_number {
        Some(value) => println!("тЬЕ р╣Ар╕Ир╕нр╣Бр╕ер╣Йр╕з! р╕бр╕╡р╕Др╣Ир╕▓: {value} (р╣Вр╕Кр╕Др╕Фр╕╡р╕Ир╕▒р╕Зр╣Бр╕Ър╕Ъ jackpot! ЁЯНА)"),
        None => println!("тЭМ р╕Бр╕ер╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕Зр╣Ар╕Ыр╕ер╣Ир╕▓... р╣Ар╕ир╕гр╣Йр╕▓р╣Гр╕Ир╣Бр╕Ър╕Ъ empty box! ЁЯШв"),
    }

    match absent_number {
        Some(value) => println!("тЬЕ р╣Ар╕Ир╕нр╣Бр╕ер╣Йр╕з! р╕бр╕╡р╕Др╣Ир╕▓: {value} (р╣Вр╕Кр╕Др╕Фр╕╡р╕Ир╕▒р╕Зр╣Бр╕Ър╕Ъ jackpot! ЁЯНА)"),
        None => println!("тЭМ р╕Бр╕ер╣Ир╕нр╕Зр╕зр╣Ир╕▓р╕Зр╣Ар╕Ыр╕ер╣Ир╕▓... р╕Др╕▓р╕Фр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕зр╣Бр╕лр╕ер╕░р╣Бр╕Ър╕Ъ expected! ЁЯд╖тАНтЩВя╕П"),
    }

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й if let р╕Бр╕▒р╕Ъ Option - р╣Бр╕Ър╕Ър╕кр╕Ър╕▓р╕вр╣Ж р╣Др╕бр╣Ир╕Хр╣Йр╕нр╕Зр╣Ар╕Вр╕╡р╕вр╕Щр╕вр╕▓р╕зр╣Бр╕Ър╕Ъ shortcut! ЁЯШО
    if let Some(value) = some_string {
        println!("ЁЯОЙ р╣Ар╕Ир╕нр╕Вр╕нр╕Зр╕Фр╕╡: {value} (р╣Ар╕вр╣Йр╣Бр╕Ър╕Ъ hooray! ЁЯЩМ)");
    }

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й unwrap р╣Бр╕ер╕░ expect (р╕гр╕░р╕зр╕▒р╕З! р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╣Ар╕ер╣Ир╕Щр╣Др╕Яр╣Бр╕Ър╕Ъ playing with fire! ЁЯФеЁЯТА)
    println!("\nтЪая╕П === unwrap р╣Бр╕ер╕░ expect: р╕нр╕▓р╕зр╕╕р╕Шр╕кр╕нр╕Зр╕Др╕бр╣Бр╕Ър╕Ъ double-edged sword! === тЪая╕П");

    // р╣Бр╕кр╕Фр╕Зр╕Хр╕▒р╕зр╕нр╕вр╣Ир╕▓р╕Зр╕Бр╕▓р╕гр╣Гр╕Кр╣Й unwrap р╣Бр╕ер╕░ expect р╣Бр╕Ър╕Ър╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕в (р╣Др╕бр╣Ир╕нр╕вр╕▓р╕Бр╣Гр╕лр╣Йр╣Вр╕Ыр╕гр╣Бр╕Бр╕гр╕бр╕гр╕░р╣Ар╕Ър╕┤р╕Фр╣Бр╕Ър╕Ъ crash! ЁЯТе)
    let _x = Some("value");
    println!("р╕Др╣Ир╕▓р╕Чр╕╡р╣Ир╕бр╕╡р╕нр╕вр╕╣р╣И: value (р╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕вр╣Бр╕Ър╕Ъ safe mode! тЬЕ)"); // р╣Бр╕Чр╕Щр╕Чр╕╡р╣И x.unwrap()
    println!("р╕Др╣Ир╕▓р╕Чр╕╡р╣Ир╕Др╕▓р╕Фр╕лр╕зр╕▒р╕З: value (р╣Др╕бр╣Ир╕бр╕╡р╕нр╕▒р╕Щр╕Хр╕гр╕▓р╕вр╣Бр╕Ър╕Ъ no danger! ЁЯЫбя╕П)"); // р╣Бр╕Чр╕Щр╕Чр╕╡р╣И x.expect()

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й unwrap_or р╣Бр╕ер╕░ unwrap_or_else (р╕Ыр╕ер╕нр╕Фр╕ар╕▒р╕вр╕Бр╕зр╣Ир╕▓ - р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕бр╕╡р╣Бр╕Ьр╕Щр╕кр╕│р╕гр╕нр╕Зр╣Бр╕Ър╕Ъ backup plan! ЁЯЫбя╕П)
    let _y: Option<&str> = None;
    println!("unwrap_or: default value (р╕бр╕╡р╣Бр╕Ьр╕Щ B р╣Бр╕Ър╕Ъ plan B! ЁЯТб)"); // р╣Бр╕Чр╕Щр╕Чр╕╡р╣И y.unwrap_or()
    println!("unwrap_or_else: computed default (р╕Др╕┤р╕Фр╣Бр╕Ьр╕Щр╕кр╕│р╕гр╕нр╕Зр╣Др╕зр╣Йр╣Бр╕Ър╕Ъ smart backup! ЁЯза)"); // р╣Бр╕Чр╕Щр╕Чр╕╡р╣И y.unwrap_or()

    // Result enum - р╕кр╕│р╕лр╕гр╕▒р╕Ър╕Бр╕▓р╕гр╕Ир╕▒р╕Фр╕Бр╕▓р╕гр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф (р╕гр╕░р╕Ър╕Ър╣Бр╕Ир╣Йр╕Зр╣Ар╕Хр╕╖р╕нр╕Щр╕ар╕▒р╕вр╕кр╕╕р╕Фр╣Ар╕Ир╣Лр╕Зр╣Бр╕Ър╕Ъ alert system! ЁЯЪи)
    println!("\nЁЯФз === Result Enum: р╕гр╕░р╕Ър╕Ър╕гр╕▓р╕вр╕Зр╕▓р╕Щр╕Ьр╕ер╣Бр╕Ър╕Ър╕бр╕╖р╕нр╕нр╕▓р╕Кр╕╡р╕Юр╣Бр╕Ър╕Ъ professional reporting! === ЁЯФз");

    fn divide(a: f64, b: f64) -> Result<f64, String> {
        if b == 0.0 {
            Err(String::from("р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕лр╕▓р╕гр╕Фр╣Йр╕зр╕вр╕ир╕╣р╕Щр╕вр╣Мр╣Др╕Фр╣Й (р╕Др╕Ур╕┤р╕Хр╕ир╕▓р╕кр╕Хр╕гр╣Мр╣Др╕бр╣Ир╕нр╕Щр╕╕р╕Нр╕▓р╕Хр╣Бр╕Ър╕Ъ math forbidden! ЁЯЪлЁЯУР)"))
        } else {
            Ok(a / b)  // р╕лр╕▓р╕гр╣Др╕Фр╣Йр╕кр╕│р╣Ар╕гр╣Зр╕И! р╣Ар╕вр╣Йр╣Бр╕Ър╕Ъ success! ЁЯОЙ
        }
    }

    let good_result = divide(10.0, 2.0);
    let bad_result = divide(10.0, 0.0);

    println!("good_result: {good_result:?}");
    println!("bad_result: {bad_result:?}");

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й match р╕Бр╕▒р╕Ъ Result - р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Ьр╕ер╕кр╕нр╕Ър╣Бр╕Ър╕Ъ exam result! ЁЯУК
    match good_result {
        Ok(value) => println!("тЬЕ р╕кр╕│р╣Ар╕гр╣Зр╕И! р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М: {value} (р╣Ар╕Бр╣Ир╕Зр╕бр╕▓р╕Бр╣Бр╕Ър╕Ъ excellent! ЁЯМЯ)"),
        Err(error) => println!("тЭМ р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з: {error} (р╣Ар╕кр╕╡р╕вр╣Гр╕Ир╕Фр╣Йр╕зр╕вр╣Бр╕Ър╕Ъ sorry! ЁЯШФ)"),
    }

    match bad_result {
        Ok(value) => println!("тЬЕ р╕кр╕│р╣Ар╕гр╣Зр╕И! р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М: {value} (р╣Ар╕Бр╣Ир╕Зр╕бр╕▓р╕Бр╣Бр╕Ър╕Ъ excellent! ЁЯМЯ)"),
        Err(error) => println!("тЭМ р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з: {error} (р╕Др╕▓р╕Фр╣Др╕зр╣Йр╣Бр╕ер╣Йр╕зр╣Бр╕Ър╕Ъ expected! ЁЯджтАНтЩВя╕П)"),
    }

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й if let р╕Бр╕▒р╕Ъ Result - р╣Бр╕Ър╕Ър╣Ар╕ер╕╖р╕нр╕Бр╕Фр╕╣р╣Ар╕Йр╕Юр╕▓р╕░р╕Чр╕╡р╣Ир╕кр╕Щр╣Гр╕Ир╣Бр╕Ър╕Ъ selective viewing! ЁЯСА
    if let Ok(value) = divide(20.0, 4.0) {
        println!("ЁЯОЙ р╕Бр╕▓р╕гр╕лр╕▓р╕гр╕кр╕│р╣Ар╕гр╣Зр╕И: {value} (р╣Ар╕вр╕╡р╣Ир╕вр╕бр╣Ар╕ер╕вр╣Бр╕Ър╕Ъ awesome! ЁЯСП)");
    }

    if let Err(error) = divide(10.0, 0.0) {
        println!("ЁЯТе р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {error} (р╕нр╕╕р╣Кр╕Ыр╕кр╣Мр╣Бр╕Ър╕Ъ oops! ЁЯдн)");
    }

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й unwrap_or р╕Бр╕▒р╕Ъ Result - р╕бр╕╡р╣Бр╕Ьр╕Щр╕кр╕│р╕гр╕нр╕Зр╣Ар╕кр╕бр╕нр╣Бр╕Ър╕Ъ always have backup! ЁЯЫбя╕П
    let result1 = divide(15.0, 3.0).unwrap_or(0.0);
    let result2 = divide(15.0, 0.0).unwrap_or(0.0);

    println!("result1 (р╕кр╕│р╣Ар╕гр╣Зр╕И): {result1} (р╣Др╕Фр╣Йр╕Ьр╕ер╕Ир╕гр╕┤р╕Зр╣Бр╕Ър╕Ъ real result! тЬи)");
    println!("result2 (р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з, р╣Гр╕Кр╣Йр╕Др╣Ир╕▓р╣Ар╕гр╕┤р╣Ир╕бр╕Хр╣Йр╕Щ): {result2} (р╣Гр╕Кр╣Йр╣Бр╕Ьр╕Щ B р╣Бр╕Ър╕Ъ fallback! ЁЯФД)");

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й map р╣Бр╕ер╕░ and_then - р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕кр╕▓р╕вр╕Юр╕▓р╕Щр╕Ьр╕ер╕┤р╕Хр╣Бр╕Ър╕Ъ assembly line! ЁЯПн
    println!("\nЁЯФД === map р╣Бр╕ер╕░ and_then: р╣Вр╕гр╕Зр╕Зр╕▓р╕Щр╣Бр╕Ыр╕ер╕Зр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Бр╕Ър╕Ъ data factory! === ЁЯФД");

    let number_str = "42";
    let result = number_str
        .parse::<i32>()  // р╣Бр╕Ыр╕ер╕Зр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╣Ар╕Ыр╣Зр╕Щр╕Хр╕▒р╕зр╣Ар╕ер╕Вр╣Бр╕Ър╕Ъ parse text! ЁЯФв
        .map(|n| n * 2)  // р╕Др╕╣р╕Ур╕Фр╣Йр╕зр╕в 2 (р╣Ар╕Юр╕┤р╣Ир╕бр╕Юр╕ер╕▒р╕Зр╣Бр╕Ър╕Ъ power up! тЪб)
        .map(|n| format!("р╕Ьр╕ер╕ер╕▒р╕Юр╕Шр╣М: {n}"));  // р╕лр╣Ир╕нр╕лр╕╕р╣Йр╕бр╕Фр╣Йр╕зр╕вр╕Вр╣Йр╕нр╕Др╕зр╕▓р╕бр╕кр╕зр╕вр╣Жр╣Бр╕Ър╕Ъ pretty wrap! ЁЯОБ

    match result {
        Ok(value) => println!("тЬЕ {value} (р╕кр╕▓р╕вр╕Юр╕▓р╕Щр╕Чр╕│р╕Зр╕▓р╕Щр╣Ар╕гр╕╡р╕вр╕Ър╕гр╣Йр╕нр╕вр╣Бр╕Ър╕Ъ smooth operation! ЁЯПн)"),
        Err(error) => println!("тЭМ р╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф: {error} (р╕кр╕▓р╕вр╕Юр╕▓р╕Щр╕Вр╕▒р╕Фр╕Вр╣Йр╕нр╕Зр╣Бр╕Ър╕Ъ malfunction! ЁЯФз)"),
    }

    // р╕Бр╕▓р╕гр╣Гр╕Кр╣Й and_then р╕кр╕│р╕лр╕гр╕▒р╕Ъ chain operations - р╣Ар╕лр╕бр╕╖р╕нр╕Щр╕Бр╕▓р╕гр╕Хр╣Ир╕нр╕Чр╣Ир╕нр╣Бр╕Ър╕Ъ pipeline! ЁЯФЧ
    let chained_result = "10".parse::<i32>().and_then(|n| {
        if n > 0 {
            Ok(n * 2)  // р╕Ьр╣Ир╕▓р╕Щр╕Бр╕▓р╕гр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ъ! р╕Др╕╣р╕Ур╣Ар╕ер╕вр╣Бр╕Ър╕Ъ validation passed! ЁЯЪА
        } else {
            Err("р╕Хр╕▒р╕зр╣Ар╕ер╕Вр╕Хр╣Йр╕нр╕Зр╣Ар╕Ыр╣Зр╕Щр╕Ър╕зр╕Б".parse::<i32>().unwrap_err())  // р╣Др╕бр╣Ир╕Ьр╣Ир╕▓р╕Щ! р╕лр╕вр╕╕р╕Фр╣Бр╕Ър╕Ъ stop! ЁЯЫС
        }
    });

    println!("chained_result: {chained_result:?} (р╕Ьр╕ер╕Ир╕▓р╕Бр╕кр╕▓р╕вр╕Юр╕▓р╕Щр╕вр╕▓р╕зр╣Жр╣Бр╕Ър╕Ъ long pipeline! ЁЯПн)");
}
